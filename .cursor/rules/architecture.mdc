---
description:
globs:
alwaysApply: true
---
## 개요
- This document outlines the technical architecture for this project.

- 이 프로젝트의 원제는 pythonic-cpp 이다. python에 익숙한 개발자가 c++ 언어로 개발할 때 느끼는 불편함을 조금이라도 덜기 위한 시도에서 시작되었다.
- 이 리포지토리는 https://github.com/cafrii/cpp_pythonic 에서 관리된다.
- refer [architecture.md](mdc:docs/architecture.md)



## Technology Stack
- modern c++
  - 현재 c++17, 일부에서는 조건부 컴파일을 이용하여 c++20 을 이용하고 있다.

## Coding Style
- refer [coding_style.md](mdc:docs/coding_style.md)
- 특히 __PYC_LIB_IMPLEMENTATION 관련 내용이 잘 지켜질 수 있도록 해야 한다.

## Development Workflow
- 소규모 라이브러리 개발을 위한 일반적인 개발 절차를 따른다.
  - 요구 사항 수집
  - 인터페이스 구상/설계
  - 구현
  - 단위 시험
  - 배포 (현재 이 프로젝트에서는 배포 단계 없음)


## Build and Test
- refer [how_to_build_and_test.md](mdc:docs/how_to_build_and_test.md)


## Deployment Architecture

c++로 개발되는 프로젝트에서 본 라이브러리를 활용하기 위해 다음과 같은 방법을 고려해 볼 수 있다.
- (1) header-only 모드로 필요한 헤더 파일을 직접 include 하여 사용.
  - top 프로젝트에서 본 리포지토리를 git submodule 로 등록 하고 src/ 아래의 필요한 헤더파일을 직접 포함하여 사용
- (2) pre-built library
  - (1) 보다 더 일반적인 방법일 수 있겠으나 현재는 plan 수준.
지금은 1번 방식만 사용한다.


